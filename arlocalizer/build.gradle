apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.vanniktech.android.junit.jacoco'
apply from: 'dependencies.gradle'

def versionMajor = 0
def versionMinor = 1
def versionPatch = 0

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    junitJacoco {
        jacocoVersion = '0.7.9'
        excludes = ['android/databinding/**/*.class',
                    '**/android/databinding/*Binding.class',
                    '**/BR.*',
                    '**/R.class',
                    '**/R$*.class',
                    '**/BuildConfig.*',
                    '**/Manifest*.*',
                    '**/*$ViewInjector*.*',
                    '**/*$ViewBinder*.*',
                    '**/*_MembersInjector.class',
                    '**/Dagger*Component.class',
                    '**/Dagger*Component$Builder.class',
                    '**/*Module_*Factory.class',
                    '**/AutoValue_*.*',
                    '**/*JavascriptBridge.class',
                    '**/Lambda$*.class',
                    '**/Lambda.class',
                    '**/*Lambda.class',
                    '**/*Lambda*.class']
    }

    lintOptions {
        abortOnError false
        xmlReport true
    }
}

dependencies {
    //Kotlin
    implementation libs.kotlin

    // Support
    implementation libs.appCompat
    implementation libs.materialComponents

    // ViewModels LiveData
    implementation libs.lifecycleExtensions
    implementation libs.ktxViewModel

    // KTX
    implementation libs.ktx
    implementation libs.ktxReactiveStreams

    // Dagger
    implementation libs.dagger
    implementation libs.daggerAndroid
    implementation libs.daggerAndroidSupport
    kapt proc.dagger
    kapt proc.daggerAndroid
    compileOnly proc.javaxAnnotation

    //RxJava
    implementation libs.rxJava2
    implementation(libs.rxKotlin2) {
        exclude module: 'rxjava'
        exclude module: 'kotlin-stdlib'
    }
    implementation(libs.rxAndroid2) {
        exclude module: 'rxjava'
    }

    // Timber
    implementation libs.timber

    //Location
    implementation libs.playServicesLocation
    implementation libs.rxLocation

    //Camera
    implementation libs.cameraXCore
    implementation libs.camera2

    // Unit testing
    testImplementation test.junit
    testImplementation test.mockito
    testImplementation test.mockitoKotlin
    testImplementation test.archTesting
}
apply from: 'publish.gradle'
